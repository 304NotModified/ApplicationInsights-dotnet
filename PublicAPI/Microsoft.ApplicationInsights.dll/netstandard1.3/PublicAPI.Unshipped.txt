Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry.Id.get -> string
Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry.Id.set -> void
Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.AddHeartbeatProperty(string propertyName, string propertyValue, bool isHealthy) -> bool
Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.ExcludedHeartbeatProperties.get -> System.Collections.Generic.IList<string>
Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.ExcludedHeartbeatPropertyProviders.get -> System.Collections.Generic.IList<string>
Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.HeartbeatInterval.get -> System.TimeSpan
Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.HeartbeatInterval.set -> void
Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.IsHeartbeatEnabled.get -> bool
Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.IsHeartbeatEnabled.set -> void
Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.SetHeartbeatProperty(string propertyName, string propertyValue = null, bool? isHealthy = null) -> bool
Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.IHeartbeatPropertyManager
Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.IHeartbeatPropertyManager.AddHeartbeatProperty(string propertyName, string propertyValue, bool isHealthy) -> bool
Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.IHeartbeatPropertyManager.ExcludedHeartbeatProperties.get -> System.Collections.Generic.IList<string>
Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.IHeartbeatPropertyManager.ExcludedHeartbeatPropertyProviders.get -> System.Collections.Generic.IList<string>
Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.IHeartbeatPropertyManager.HeartbeatInterval.get -> System.TimeSpan
Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.IHeartbeatPropertyManager.HeartbeatInterval.set -> void
Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.IHeartbeatPropertyManager.IsHeartbeatEnabled.get -> bool
Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.IHeartbeatPropertyManager.IsHeartbeatEnabled.set -> void
Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.IHeartbeatPropertyManager.SetHeartbeatProperty(string propertyName, string propertyValue = null, bool? isHealthy = null) -> bool
Microsoft.ApplicationInsights.Metric
Microsoft.ApplicationInsights.Metric.GetAllSeries() -> System.Collections.Generic.IReadOnlyList<System.Collections.Generic.KeyValuePair<string[], Microsoft.ApplicationInsights.Metrics.MetricSeries>>
Microsoft.ApplicationInsights.Metric.GetDimensionValues(int dimensionNumber) -> System.Collections.Generic.IReadOnlyCollection<string>
Microsoft.ApplicationInsights.Metric.Identifier.get -> Microsoft.ApplicationInsights.Metrics.MetricIdentifier
Microsoft.ApplicationInsights.Metric.SeriesCount.get -> int
Microsoft.ApplicationInsights.Metric.TrackValue(double metricValue) -> void
Microsoft.ApplicationInsights.Metric.TrackValue(object metricValue) -> void
Microsoft.ApplicationInsights.Metric.TryGetDataSeries(out Microsoft.ApplicationInsights.Metrics.MetricSeries series) -> bool
Microsoft.ApplicationInsights.Metric.TryGetDataSeries(out Microsoft.ApplicationInsights.Metrics.MetricSeries series, bool createIfNotExists, params string[] dimensionValues) -> bool
Microsoft.ApplicationInsights.Metric.TryGetDataSeries(out Microsoft.ApplicationInsights.Metrics.MetricSeries series, string dimension1Value) -> bool
Microsoft.ApplicationInsights.Metric.TryGetDataSeries(out Microsoft.ApplicationInsights.Metrics.MetricSeries series, string dimension1Value, string dimension2Value) -> bool
Microsoft.ApplicationInsights.Metric.TryGetDataSeries(out Microsoft.ApplicationInsights.Metrics.MetricSeries series, string dimension1Value, string dimension2Value, string dimension3Value) -> bool
Microsoft.ApplicationInsights.Metric.TryGetDataSeries(out Microsoft.ApplicationInsights.Metrics.MetricSeries series, string dimension1Value, string dimension2Value, string dimension3Value, string dimension4Value) -> bool
Microsoft.ApplicationInsights.Metric.TryGetDataSeries(out Microsoft.ApplicationInsights.Metrics.MetricSeries series, string dimension1Value, string dimension2Value, string dimension3Value, string dimension4Value, string dimension5Value) -> bool
Microsoft.ApplicationInsights.Metric.TryGetDataSeries(out Microsoft.ApplicationInsights.Metrics.MetricSeries series, string dimension1Value, string dimension2Value, string dimension3Value, string dimension4Value, string dimension5Value, string dimension6Value) -> bool
Microsoft.ApplicationInsights.Metric.TryGetDataSeries(out Microsoft.ApplicationInsights.Metrics.MetricSeries series, string dimension1Value, string dimension2Value, string dimension3Value, string dimension4Value, string dimension5Value, string dimension6Value, string dimension7Value) -> bool
Microsoft.ApplicationInsights.Metric.TryGetDataSeries(out Microsoft.ApplicationInsights.Metrics.MetricSeries series, string dimension1Value, string dimension2Value, string dimension3Value, string dimension4Value, string dimension5Value, string dimension6Value, string dimension7Value, string dimension8Value) -> bool
Microsoft.ApplicationInsights.Metric.TryGetDataSeries(out Microsoft.ApplicationInsights.Metrics.MetricSeries series, string dimension1Value, string dimension2Value, string dimension3Value, string dimension4Value, string dimension5Value, string dimension6Value, string dimension7Value, string dimension8Value, string dimension9Value) -> bool
Microsoft.ApplicationInsights.Metric.TryGetDataSeries(out Microsoft.ApplicationInsights.Metrics.MetricSeries series, string dimension1Value, string dimension2Value, string dimension3Value, string dimension4Value, string dimension5Value, string dimension6Value, string dimension7Value, string dimension8Value, string dimension9Value, string dimension10Value) -> bool
Microsoft.ApplicationInsights.Metric.TryTrackValue(double metricValue, string dimension1Value) -> bool
Microsoft.ApplicationInsights.Metric.TryTrackValue(double metricValue, string dimension1Value, string dimension2Value) -> bool
Microsoft.ApplicationInsights.Metric.TryTrackValue(double metricValue, string dimension1Value, string dimension2Value, string dimension3Value) -> bool
Microsoft.ApplicationInsights.Metric.TryTrackValue(double metricValue, string dimension1Value, string dimension2Value, string dimension3Value, string dimension4Value) -> bool
Microsoft.ApplicationInsights.Metric.TryTrackValue(double metricValue, string dimension1Value, string dimension2Value, string dimension3Value, string dimension4Value, string dimension5Value) -> bool
Microsoft.ApplicationInsights.Metric.TryTrackValue(double metricValue, string dimension1Value, string dimension2Value, string dimension3Value, string dimension4Value, string dimension5Value, string dimension6Value) -> bool
Microsoft.ApplicationInsights.Metric.TryTrackValue(double metricValue, string dimension1Value, string dimension2Value, string dimension3Value, string dimension4Value, string dimension5Value, string dimension6Value, string dimension7Value) -> bool
Microsoft.ApplicationInsights.Metric.TryTrackValue(double metricValue, string dimension1Value, string dimension2Value, string dimension3Value, string dimension4Value, string dimension5Value, string dimension6Value, string dimension7Value, string dimension8Value) -> bool
Microsoft.ApplicationInsights.Metric.TryTrackValue(double metricValue, string dimension1Value, string dimension2Value, string dimension3Value, string dimension4Value, string dimension5Value, string dimension6Value, string dimension7Value, string dimension8Value, string dimension9Value) -> bool
Microsoft.ApplicationInsights.Metric.TryTrackValue(double metricValue, string dimension1Value, string dimension2Value, string dimension3Value, string dimension4Value, string dimension5Value, string dimension6Value, string dimension7Value, string dimension8Value, string dimension9Value, string dimension10Value) -> bool
Microsoft.ApplicationInsights.Metric.TryTrackValue(object metricValue, string dimension1Value) -> bool
Microsoft.ApplicationInsights.Metric.TryTrackValue(object metricValue, string dimension1Value, string dimension2Value) -> bool
Microsoft.ApplicationInsights.Metric.TryTrackValue(object metricValue, string dimension1Value, string dimension2Value, string dimension3Value) -> bool
Microsoft.ApplicationInsights.Metric.TryTrackValue(object metricValue, string dimension1Value, string dimension2Value, string dimension3Value, string dimension4Value) -> bool
Microsoft.ApplicationInsights.Metric.TryTrackValue(object metricValue, string dimension1Value, string dimension2Value, string dimension3Value, string dimension4Value, string dimension5Value) -> bool
Microsoft.ApplicationInsights.Metric.TryTrackValue(object metricValue, string dimension1Value, string dimension2Value, string dimension3Value, string dimension4Value, string dimension5Value, string dimension6Value) -> bool
Microsoft.ApplicationInsights.Metric.TryTrackValue(object metricValue, string dimension1Value, string dimension2Value, string dimension3Value, string dimension4Value, string dimension5Value, string dimension6Value, string dimension7Value) -> bool
Microsoft.ApplicationInsights.Metric.TryTrackValue(object metricValue, string dimension1Value, string dimension2Value, string dimension3Value, string dimension4Value, string dimension5Value, string dimension6Value, string dimension7Value, string dimension8Value) -> bool
Microsoft.ApplicationInsights.Metric.TryTrackValue(object metricValue, string dimension1Value, string dimension2Value, string dimension3Value, string dimension4Value, string dimension5Value, string dimension6Value, string dimension7Value, string dimension8Value, string dimension9Value) -> bool
Microsoft.ApplicationInsights.Metric.TryTrackValue(object metricValue, string dimension1Value, string dimension2Value, string dimension3Value, string dimension4Value, string dimension5Value, string dimension6Value, string dimension7Value, string dimension8Value, string dimension9Value, string dimension10Value) -> bool
Microsoft.ApplicationInsights.MetricAggregationScope
Microsoft.ApplicationInsights.MetricAggregationScope.TelemetryClient = 1 -> Microsoft.ApplicationInsights.MetricAggregationScope
Microsoft.ApplicationInsights.MetricAggregationScope.TelemetryConfiguration = 0 -> Microsoft.ApplicationInsights.MetricAggregationScope
Microsoft.ApplicationInsights.MetricConfigurations
Microsoft.ApplicationInsights.MetricConfigurationsExtensions
Microsoft.ApplicationInsights.MetricDimensionNames
Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext
Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Cloud
Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Component
Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Device
Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Location
Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Operation
Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Session
Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.User
Microsoft.ApplicationInsights.Metrics.Extensibility.AggregationPeriodSummary
Microsoft.ApplicationInsights.Metrics.Extensibility.AggregationPeriodSummary.AggregationPeriodSummary(System.Collections.Generic.IReadOnlyList<Microsoft.ApplicationInsights.Metrics.MetricAggregate> persistentAggregates, System.Collections.Generic.IReadOnlyList<Microsoft.ApplicationInsights.Metrics.MetricAggregate> nonpersistentAggregates) -> void
Microsoft.ApplicationInsights.Metrics.Extensibility.AggregationPeriodSummary.NonpersistentAggregates.get -> System.Collections.Generic.IReadOnlyList<Microsoft.ApplicationInsights.Metrics.MetricAggregate>
Microsoft.ApplicationInsights.Metrics.Extensibility.AggregationPeriodSummary.PersistentAggregates.get -> System.Collections.Generic.IReadOnlyList<Microsoft.ApplicationInsights.Metrics.MetricAggregate>
Microsoft.ApplicationInsights.Metrics.Extensibility.ApplicationInsightsTelemetryPipeline
Microsoft.ApplicationInsights.Metrics.Extensibility.ApplicationInsightsTelemetryPipeline.ApplicationInsightsTelemetryPipeline(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration telemetryPipeline) -> void
Microsoft.ApplicationInsights.Metrics.Extensibility.ApplicationInsightsTelemetryPipeline.ApplicationInsightsTelemetryPipeline(Microsoft.ApplicationInsights.TelemetryClient telemetryClient) -> void
Microsoft.ApplicationInsights.Metrics.Extensibility.ApplicationInsightsTelemetryPipeline.FlushAsync(System.Threading.CancellationToken cancelToken) -> System.Threading.Tasks.Task
Microsoft.ApplicationInsights.Metrics.Extensibility.ApplicationInsightsTelemetryPipeline.TrackAsync(Microsoft.ApplicationInsights.Metrics.MetricAggregate metricAggregate, System.Threading.CancellationToken cancelToken) -> System.Threading.Tasks.Task
Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricAggregateToTelemetryPipelineConverter
Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricAggregateToTelemetryPipelineConverter.Convert(Microsoft.ApplicationInsights.Metrics.MetricAggregate aggregate) -> object
Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricSeriesAggregator
Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricSeriesAggregator.CompleteAggregation(System.DateTimeOffset periodEnd) -> Microsoft.ApplicationInsights.Metrics.MetricAggregate
Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricSeriesAggregator.CreateAggregateUnsafe(System.DateTimeOffset periodEnd) -> Microsoft.ApplicationInsights.Metrics.MetricAggregate
Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricSeriesAggregator.DataSeries.get -> Microsoft.ApplicationInsights.Metrics.MetricSeries
Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricSeriesAggregator.Reset(System.DateTimeOffset periodStart) -> void
Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricSeriesAggregator.Reset(System.DateTimeOffset periodStart, Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricValueFilter valueFilter) -> void
Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricSeriesAggregator.TrackValue(double metricValue) -> void
Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricSeriesAggregator.TrackValue(object metricValue) -> void
Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricSeriesAggregator.TryRecycle() -> bool
Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricSeriesFilter
Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricSeriesFilter.WillConsume(Microsoft.ApplicationInsights.Metrics.MetricSeries dataSeries, out Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricValueFilter valueFilter) -> bool
Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricTelemetryPipeline
Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricTelemetryPipeline.FlushAsync(System.Threading.CancellationToken cancelToken) -> System.Threading.Tasks.Task
Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricTelemetryPipeline.TrackAsync(Microsoft.ApplicationInsights.Metrics.MetricAggregate metricAggregate, System.Threading.CancellationToken cancelToken) -> System.Threading.Tasks.Task
Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricValueFilter
Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricValueFilter.WillConsume(Microsoft.ApplicationInsights.Metrics.MetricSeries dataSeries, double metricValue) -> bool
Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricValueFilter.WillConsume(Microsoft.ApplicationInsights.Metrics.MetricSeries dataSeries, object metricValue) -> bool
Microsoft.ApplicationInsights.Metrics.Extensibility.MemoryMetricTelemetryPipeline
Microsoft.ApplicationInsights.Metrics.Extensibility.MemoryMetricTelemetryPipeline.Clear() -> void
Microsoft.ApplicationInsights.Metrics.Extensibility.MemoryMetricTelemetryPipeline.Count.get -> int
Microsoft.ApplicationInsights.Metrics.Extensibility.MemoryMetricTelemetryPipeline.CountLimit.get -> int
Microsoft.ApplicationInsights.Metrics.Extensibility.MemoryMetricTelemetryPipeline.FlushAsync(System.Threading.CancellationToken cancelToken) -> System.Threading.Tasks.Task
Microsoft.ApplicationInsights.Metrics.Extensibility.MemoryMetricTelemetryPipeline.MemoryMetricTelemetryPipeline() -> void
Microsoft.ApplicationInsights.Metrics.Extensibility.MemoryMetricTelemetryPipeline.MemoryMetricTelemetryPipeline(int countLimit) -> void
Microsoft.ApplicationInsights.Metrics.Extensibility.MemoryMetricTelemetryPipeline.TrackAsync(Microsoft.ApplicationInsights.Metrics.MetricAggregate metricAggregate, System.Threading.CancellationToken cancelToken) -> System.Threading.Tasks.Task
Microsoft.ApplicationInsights.Metrics.Extensibility.MemoryMetricTelemetryPipeline.this[int index].get -> Microsoft.ApplicationInsights.Metrics.MetricAggregate
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregateToApplicationInsightsPipelineConverterBase
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregateToApplicationInsightsPipelineConverterBase.Convert(Microsoft.ApplicationInsights.Metrics.MetricAggregate aggregate) -> object
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregateToTelemetryPipelineConverters
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregateToTelemetryPipelineConverters.Add(System.Type pipelineType, string aggregationKindMoniker, Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricAggregateToTelemetryPipelineConverter converter) -> void
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregateToTelemetryPipelineConverters.TryGet(System.Type pipelineType, string aggregationKindMoniker, out Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricAggregateToTelemetryPipelineConverter converter) -> bool
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregationCycleKind
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregationCycleKind.Custom = 2 -> Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregationCycleKind
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregationCycleKind.Default = 0 -> Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregationCycleKind
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregationCycleKind.QuickPulse = 1 -> Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregationCycleKind
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricConfigurationExtensions
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricExtensions
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricManagerExtensions
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase<TBufferedValue>
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase<TBufferedValue>.AddInfo_Timing_Dimensions_Context(Microsoft.ApplicationInsights.Metrics.MetricAggregate aggregate, System.DateTimeOffset periodEnd) -> void
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase<TBufferedValue>.CompleteAggregation(System.DateTimeOffset periodEnd) -> Microsoft.ApplicationInsights.Metrics.MetricAggregate
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase<TBufferedValue>.CreateAggregateUnsafe(System.DateTimeOffset periodEnd) -> Microsoft.ApplicationInsights.Metrics.MetricAggregate
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase<TBufferedValue>.DataSeries.get -> Microsoft.ApplicationInsights.Metrics.MetricSeries
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase<TBufferedValue>.MetricSeriesAggregatorBase(System.Func<Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase<TBufferedValue>> metricValuesBufferFactory, Microsoft.ApplicationInsights.Metrics.IMetricSeriesConfiguration configuration, Microsoft.ApplicationInsights.Metrics.MetricSeries dataSeries, Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregationCycleKind aggregationCycleKind) -> void
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase<TBufferedValue>.Reset(System.DateTimeOffset periodStart) -> void
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase<TBufferedValue>.Reset(System.DateTimeOffset periodStart, Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricValueFilter valueFilter) -> void
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase<TBufferedValue>.TrackValue(double metricValue) -> void
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase<TBufferedValue>.TrackValue(object metricValue) -> void
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase<TBufferedValue>.TryRecycle() -> bool
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesExtensions
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase<TValue>
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase<TValue>.Capacity.get -> int
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase<TValue>.GetAndResetValue(int index) -> TValue
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase<TValue>.IncWriteIndex() -> int
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase<TValue>.MetricValuesBufferBase(int capacity) -> void
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase<TValue>.NextFlushIndex.get -> int
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase<TValue>.NextFlushIndex.set -> void
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase<TValue>.PeekLastWriteIndex() -> int
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase<TValue>.ResetIndices() -> void
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase<TValue>.ResetIndicesAndData() -> void
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase<TValue>.WriteValue(int index, TValue value) -> void
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBuffer_Double
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBuffer_Double.MetricValuesBuffer_Double(int capacity) -> void
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBuffer_Object
Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBuffer_Object.MetricValuesBuffer_Object(int capacity) -> void
Microsoft.ApplicationInsights.Metrics.Extensibility.TelemetryClientExtensions
Microsoft.ApplicationInsights.Metrics.IMetricSeriesConfiguration
Microsoft.ApplicationInsights.Metrics.IMetricSeriesConfiguration.CreateNewAggregator(Microsoft.ApplicationInsights.Metrics.MetricSeries dataSeries, Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregationCycleKind aggregationCycleKind) -> Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricSeriesAggregator
Microsoft.ApplicationInsights.Metrics.IMetricSeriesConfiguration.RequiresPersistentAggregation.get -> bool
Microsoft.ApplicationInsights.Metrics.MetricAggregate
Microsoft.ApplicationInsights.Metrics.MetricAggregate.AggregationKindMoniker.get -> string
Microsoft.ApplicationInsights.Metrics.MetricAggregate.AggregationPeriodDuration.get -> System.TimeSpan
Microsoft.ApplicationInsights.Metrics.MetricAggregate.AggregationPeriodDuration.set -> void
Microsoft.ApplicationInsights.Metrics.MetricAggregate.AggregationPeriodStart.get -> System.DateTimeOffset
Microsoft.ApplicationInsights.Metrics.MetricAggregate.AggregationPeriodStart.set -> void
Microsoft.ApplicationInsights.Metrics.MetricAggregate.Data.get -> System.Collections.Generic.IDictionary<string, object>
Microsoft.ApplicationInsights.Metrics.MetricAggregate.Dimensions.get -> System.Collections.Generic.IDictionary<string, string>
Microsoft.ApplicationInsights.Metrics.MetricAggregate.GetDataValue<T>(string dataKey, T defaultValue) -> T
Microsoft.ApplicationInsights.Metrics.MetricAggregate.MetricAggregate(string metricNamespace, string metricId, string aggregationKindMoniker) -> void
Microsoft.ApplicationInsights.Metrics.MetricAggregate.MetricId.get -> string
Microsoft.ApplicationInsights.Metrics.MetricAggregate.MetricNamespace.get -> string
Microsoft.ApplicationInsights.Metrics.MetricConfiguration
Microsoft.ApplicationInsights.Metrics.MetricConfiguration.MetricConfiguration(int seriesCountLimit, int valuesPerDimensionLimit, Microsoft.ApplicationInsights.Metrics.IMetricSeriesConfiguration seriesConfig) -> void
Microsoft.ApplicationInsights.Metrics.MetricConfiguration.SeriesConfig.get -> Microsoft.ApplicationInsights.Metrics.IMetricSeriesConfiguration
Microsoft.ApplicationInsights.Metrics.MetricConfiguration.SeriesCountLimit.get -> int
Microsoft.ApplicationInsights.Metrics.MetricConfiguration.ValuesPerDimensionLimit.get -> int
Microsoft.ApplicationInsights.Metrics.MetricConfigurationForMeasurement
Microsoft.ApplicationInsights.Metrics.MetricConfigurationForMeasurement.MetricConfigurationForMeasurement(int seriesCountLimit, int valuesPerDimensionLimit, Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement seriesConfig) -> void
Microsoft.ApplicationInsights.Metrics.MetricIdentifier
Microsoft.ApplicationInsights.Metrics.MetricIdentifier.DimensionsCount.get -> int
Microsoft.ApplicationInsights.Metrics.MetricIdentifier.Equals(Microsoft.ApplicationInsights.Metrics.MetricIdentifier otherMetricIdentifier) -> bool
Microsoft.ApplicationInsights.Metrics.MetricIdentifier.GetDimensionName(int dimensionNumber) -> string
Microsoft.ApplicationInsights.Metrics.MetricIdentifier.GetDimensionNames() -> System.Collections.Generic.IEnumerable<string>
Microsoft.ApplicationInsights.Metrics.MetricIdentifier.MetricId.get -> string
Microsoft.ApplicationInsights.Metrics.MetricIdentifier.MetricIdentifier(string metricId) -> void
Microsoft.ApplicationInsights.Metrics.MetricIdentifier.MetricIdentifier(string metricNamespace, string metricId) -> void
Microsoft.ApplicationInsights.Metrics.MetricIdentifier.MetricIdentifier(string metricNamespace, string metricId, System.Collections.Generic.IList<string> dimensionNames) -> void
Microsoft.ApplicationInsights.Metrics.MetricIdentifier.MetricIdentifier(string metricNamespace, string metricId, string dimension1Name) -> void
Microsoft.ApplicationInsights.Metrics.MetricIdentifier.MetricIdentifier(string metricNamespace, string metricId, string dimension1Name, string dimension2Name) -> void
Microsoft.ApplicationInsights.Metrics.MetricIdentifier.MetricIdentifier(string metricNamespace, string metricId, string dimension1Name, string dimension2Name, string dimension3Name) -> void
Microsoft.ApplicationInsights.Metrics.MetricIdentifier.MetricIdentifier(string metricNamespace, string metricId, string dimension1Name, string dimension2Name, string dimension3Name, string dimension4Name) -> void
Microsoft.ApplicationInsights.Metrics.MetricIdentifier.MetricIdentifier(string metricNamespace, string metricId, string dimension1Name, string dimension2Name, string dimension3Name, string dimension4Name, string dimension5Name) -> void
Microsoft.ApplicationInsights.Metrics.MetricIdentifier.MetricIdentifier(string metricNamespace, string metricId, string dimension1Name, string dimension2Name, string dimension3Name, string dimension4Name, string dimension5Name, string dimension6Name) -> void
Microsoft.ApplicationInsights.Metrics.MetricIdentifier.MetricIdentifier(string metricNamespace, string metricId, string dimension1Name, string dimension2Name, string dimension3Name, string dimension4Name, string dimension5Name, string dimension6Name, string dimension7Name) -> void
Microsoft.ApplicationInsights.Metrics.MetricIdentifier.MetricIdentifier(string metricNamespace, string metricId, string dimension1Name, string dimension2Name, string dimension3Name, string dimension4Name, string dimension5Name, string dimension6Name, string dimension7Name, string dimension8Name) -> void
Microsoft.ApplicationInsights.Metrics.MetricIdentifier.MetricIdentifier(string metricNamespace, string metricId, string dimension1Name, string dimension2Name, string dimension3Name, string dimension4Name, string dimension5Name, string dimension6Name, string dimension7Name, string dimension8Name, string dimension9Name) -> void
Microsoft.ApplicationInsights.Metrics.MetricIdentifier.MetricIdentifier(string metricNamespace, string metricId, string dimension1Name, string dimension2Name, string dimension3Name, string dimension4Name, string dimension5Name, string dimension6Name, string dimension7Name, string dimension8Name, string dimension9Name, string dimension10Name) -> void
Microsoft.ApplicationInsights.Metrics.MetricIdentifier.MetricNamespace.get -> string
Microsoft.ApplicationInsights.Metrics.MetricManager
Microsoft.ApplicationInsights.Metrics.MetricManager.CreateNewSeries(Microsoft.ApplicationInsights.Metrics.MetricIdentifier metricIdentifier, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>> dimensionNamesAndValues, Microsoft.ApplicationInsights.Metrics.IMetricSeriesConfiguration config) -> Microsoft.ApplicationInsights.Metrics.MetricSeries
Microsoft.ApplicationInsights.Metrics.MetricManager.CreateNewSeries(string metricNamespace, string metricId, Microsoft.ApplicationInsights.Metrics.IMetricSeriesConfiguration config) -> Microsoft.ApplicationInsights.Metrics.MetricSeries
Microsoft.ApplicationInsights.Metrics.MetricManager.CreateNewSeries(string metricNamespace, string metricId, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>> dimensionNamesAndValues, Microsoft.ApplicationInsights.Metrics.IMetricSeriesConfiguration config) -> Microsoft.ApplicationInsights.Metrics.MetricSeries
Microsoft.ApplicationInsights.Metrics.MetricManager.Flush() -> void
Microsoft.ApplicationInsights.Metrics.MetricManager.MetricManager(Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricTelemetryPipeline telemetryPipeline) -> void
Microsoft.ApplicationInsights.Metrics.MetricManager.Metrics.get -> Microsoft.ApplicationInsights.Metrics.MetricsCollection
Microsoft.ApplicationInsights.Metrics.MetricSeries
Microsoft.ApplicationInsights.Metrics.MetricSeries.DimensionNamesAndValues.get -> System.Collections.Generic.IReadOnlyDictionary<string, string>
Microsoft.ApplicationInsights.Metrics.MetricSeries.GetCurrentAggregateUnsafe() -> Microsoft.ApplicationInsights.Metrics.MetricAggregate
Microsoft.ApplicationInsights.Metrics.MetricSeries.GetCurrentAggregateUnsafe(Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregationCycleKind aggregationCycleKind, System.DateTimeOffset dateTime) -> Microsoft.ApplicationInsights.Metrics.MetricAggregate
Microsoft.ApplicationInsights.Metrics.MetricSeries.MetricIdentifier.get -> Microsoft.ApplicationInsights.Metrics.MetricIdentifier
Microsoft.ApplicationInsights.Metrics.MetricSeries.ResetAggregation() -> void
Microsoft.ApplicationInsights.Metrics.MetricSeries.ResetAggregation(System.DateTimeOffset periodStart) -> void
Microsoft.ApplicationInsights.Metrics.MetricSeries.TrackValue(double metricValue) -> void
Microsoft.ApplicationInsights.Metrics.MetricSeries.TrackValue(object metricValue) -> void
Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement
Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.AggregateKindConstants
Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.AggregateKindConstants.AggregateKindDataKeys.get -> Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.AggregateKindConstants.DataKeysConstants
Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.AggregateKindConstants.AggregateKindMoniker.get -> string
Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.AggregateKindConstants.Constants
Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.AggregateKindConstants.Constants.AggregateKindDataKeys
Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.AggregateKindConstants.DataKeysConstants
Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.AggregateKindConstants.DataKeysConstants.Count.get -> string
Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.AggregateKindConstants.DataKeysConstants.Max.get -> string
Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.AggregateKindConstants.DataKeysConstants.Min.get -> string
Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.AggregateKindConstants.DataKeysConstants.StdDev.get -> string
Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.AggregateKindConstants.DataKeysConstants.Sum.get -> string
Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.Constants
Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.Constants.AggregateKindDataKeys
Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.CreateNewAggregator(Microsoft.ApplicationInsights.Metrics.MetricSeries dataSeries, Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregationCycleKind aggregationCycleKind) -> Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricSeriesAggregator
Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.Equals(Microsoft.ApplicationInsights.Metrics.IMetricSeriesConfiguration other) -> bool
Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.Equals(Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement other) -> bool
Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.MetricSeriesConfigurationForMeasurement(bool restrictToUInt32Values) -> void
Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.RequiresPersistentAggregation.get -> bool
Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.RestrictToUInt32Values.get -> bool
Microsoft.ApplicationInsights.Metrics.MetricsCollection
Microsoft.ApplicationInsights.Metrics.MetricsCollection.Clear() -> void
Microsoft.ApplicationInsights.Metrics.MetricsCollection.Contains(Microsoft.ApplicationInsights.Metric metric) -> bool
Microsoft.ApplicationInsights.Metrics.MetricsCollection.CopyTo(Microsoft.ApplicationInsights.Metric[] array, int arrayIndex) -> void
Microsoft.ApplicationInsights.Metrics.MetricsCollection.Count.get -> int
Microsoft.ApplicationInsights.Metrics.MetricsCollection.GetEnumerator() -> System.Collections.Generic.IEnumerator<Microsoft.ApplicationInsights.Metric>
Microsoft.ApplicationInsights.Metrics.MetricsCollection.GetOrCreate(Microsoft.ApplicationInsights.Metrics.MetricIdentifier metricIdentifier, Microsoft.ApplicationInsights.Metrics.MetricConfiguration metricConfiguration) -> Microsoft.ApplicationInsights.Metric
Microsoft.ApplicationInsights.Metrics.MetricsCollection.IsReadOnly.get -> bool
Microsoft.ApplicationInsights.Metrics.MetricsCollection.Remove(Microsoft.ApplicationInsights.Metric metric) -> bool
Microsoft.ApplicationInsights.Metrics.TelemetryConfigurationExtensions
Microsoft.ApplicationInsights.TelemetryClient.GetMetric(Microsoft.ApplicationInsights.Metrics.MetricIdentifier metricIdentifier) -> Microsoft.ApplicationInsights.Metric
Microsoft.ApplicationInsights.TelemetryClient.GetMetric(Microsoft.ApplicationInsights.Metrics.MetricIdentifier metricIdentifier, Microsoft.ApplicationInsights.Metrics.MetricConfiguration metricConfiguration) -> Microsoft.ApplicationInsights.Metric
Microsoft.ApplicationInsights.TelemetryClient.GetMetric(Microsoft.ApplicationInsights.Metrics.MetricIdentifier metricIdentifier, Microsoft.ApplicationInsights.Metrics.MetricConfiguration metricConfiguration, Microsoft.ApplicationInsights.MetricAggregationScope aggregationScope) -> Microsoft.ApplicationInsights.Metric
Microsoft.ApplicationInsights.TelemetryClient.GetMetric(string metricId) -> Microsoft.ApplicationInsights.Metric
Microsoft.ApplicationInsights.TelemetryClient.GetMetric(string metricId, Microsoft.ApplicationInsights.Metrics.MetricConfiguration metricConfiguration) -> Microsoft.ApplicationInsights.Metric
Microsoft.ApplicationInsights.TelemetryClient.GetMetric(string metricId, Microsoft.ApplicationInsights.Metrics.MetricConfiguration metricConfiguration, Microsoft.ApplicationInsights.MetricAggregationScope aggregationScope) -> Microsoft.ApplicationInsights.Metric
Microsoft.ApplicationInsights.TelemetryClient.GetMetric(string metricId, string dimension1Name) -> Microsoft.ApplicationInsights.Metric
Microsoft.ApplicationInsights.TelemetryClient.GetMetric(string metricId, string dimension1Name, Microsoft.ApplicationInsights.Metrics.MetricConfiguration metricConfiguration) -> Microsoft.ApplicationInsights.Metric
Microsoft.ApplicationInsights.TelemetryClient.GetMetric(string metricId, string dimension1Name, Microsoft.ApplicationInsights.Metrics.MetricConfiguration metricConfiguration, Microsoft.ApplicationInsights.MetricAggregationScope aggregationScope) -> Microsoft.ApplicationInsights.Metric
Microsoft.ApplicationInsights.TelemetryClient.GetMetric(string metricId, string dimension1Name, string dimension2Name) -> Microsoft.ApplicationInsights.Metric
Microsoft.ApplicationInsights.TelemetryClient.GetMetric(string metricId, string dimension1Name, string dimension2Name, Microsoft.ApplicationInsights.Metrics.MetricConfiguration metricConfiguration) -> Microsoft.ApplicationInsights.Metric
Microsoft.ApplicationInsights.TelemetryClient.GetMetric(string metricId, string dimension1Name, string dimension2Name, Microsoft.ApplicationInsights.Metrics.MetricConfiguration metricConfiguration, Microsoft.ApplicationInsights.MetricAggregationScope aggregationScope) -> Microsoft.ApplicationInsights.Metric
Microsoft.ApplicationInsights.TelemetryClient.GetMetric(string metricId, string dimension1Name, string dimension2Name, string dimension3Name) -> Microsoft.ApplicationInsights.Metric
Microsoft.ApplicationInsights.TelemetryClient.GetMetric(string metricId, string dimension1Name, string dimension2Name, string dimension3Name, Microsoft.ApplicationInsights.Metrics.MetricConfiguration metricConfiguration) -> Microsoft.ApplicationInsights.Metric
Microsoft.ApplicationInsights.TelemetryClient.GetMetric(string metricId, string dimension1Name, string dimension2Name, string dimension3Name, Microsoft.ApplicationInsights.Metrics.MetricConfiguration metricConfiguration, Microsoft.ApplicationInsights.MetricAggregationScope aggregationScope) -> Microsoft.ApplicationInsights.Metric
Microsoft.ApplicationInsights.TelemetryClient.GetMetric(string metricId, string dimension1Name, string dimension2Name, string dimension3Name, string dimension4Name) -> Microsoft.ApplicationInsights.Metric
Microsoft.ApplicationInsights.TelemetryClient.GetMetric(string metricId, string dimension1Name, string dimension2Name, string dimension3Name, string dimension4Name, Microsoft.ApplicationInsights.Metrics.MetricConfiguration metricConfiguration) -> Microsoft.ApplicationInsights.Metric
Microsoft.ApplicationInsights.TelemetryClient.GetMetric(string metricId, string dimension1Name, string dimension2Name, string dimension3Name, string dimension4Name, Microsoft.ApplicationInsights.Metrics.MetricConfiguration metricConfiguration, Microsoft.ApplicationInsights.MetricAggregationScope aggregationScope) -> Microsoft.ApplicationInsights.Metric
abstract Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregateToApplicationInsightsPipelineConverterBase.AggregationKindMoniker.get -> string
abstract Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregateToApplicationInsightsPipelineConverterBase.PopulateDataValues(Microsoft.ApplicationInsights.DataContracts.MetricTelemetry telemetryItem, Microsoft.ApplicationInsights.Metrics.MetricAggregate aggregate) -> void
abstract Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase<TBufferedValue>.ConvertMetricValue(double metricValue) -> TBufferedValue
abstract Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase<TBufferedValue>.ConvertMetricValue(object metricValue) -> TBufferedValue
abstract Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase<TBufferedValue>.CreateAggregate(System.DateTimeOffset periodEnd) -> Microsoft.ApplicationInsights.Metrics.MetricAggregate
abstract Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase<TBufferedValue>.ResetAggregate() -> void
abstract Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase<TBufferedValue>.UpdateAggregate_Stage1(Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase<TBufferedValue> buffer, int minFlushIndex, int maxFlushIndex) -> object
abstract Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase<TBufferedValue>.UpdateAggregate_Stage2(object stage1Result) -> void
abstract Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase<TValue>.GetAndResetValueOnce(TValue[] values, int index) -> TValue
abstract Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase<TValue>.IsInvalidValue(TValue value) -> bool
abstract Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase<TValue>.ResetValues(TValue[] values) -> void
abstract Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase<TValue>.WriteValueOnce(TValue[] values, int index, TValue value) -> void
const Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Cloud.RoleInstance = "TelemetryContext.Cloud.RoleInstance" -> string
const Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Cloud.RoleName = "TelemetryContext.Cloud.RoleName" -> string
const Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Component.Version = "TelemetryContext.Component.Version" -> string
const Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Device.Id = "TelemetryContext.Device.Id" -> string
const Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Device.Language = "TelemetryContext.Device.Language" -> string
const Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Device.Model = "TelemetryContext.Device.Model" -> string
const Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Device.NetworkType = "TelemetryContext.Device.NetworkType" -> string
const Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Device.OemName = "TelemetryContext.Device.OemName" -> string
const Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Device.OperatingSystem = "TelemetryContext.Device.OperatingSystem" -> string
const Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Device.ScreenResolution = "TelemetryContext.Device.ScreenResolution" -> string
const Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Device.Type = "TelemetryContext.Device.Type" -> string
const Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.InstrumentationKey = "TelemetryContext.InstrumentationKey" -> string
const Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Location.Ip = "TelemetryContext.Location.Ip" -> string
const Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Operation.CorrelationVector = "TelemetryContext.Operation.CorrelationVector" -> string
const Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Operation.Id = "TelemetryContext.Operation.Id" -> string
const Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Operation.Name = "TelemetryContext.Operation.Name" -> string
const Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Operation.ParentId = "TelemetryContext.Operation.ParentId" -> string
const Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Operation.SyntheticSource = "TelemetryContext.Operation.SyntheticSource" -> string
const Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Session.Id = "TelemetryContext.Session.Id" -> string
const Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Session.IsFirst = "TelemetryContext.Session.IsFirst" -> string
const Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.User.AccountId = "TelemetryContext.User.AccountId" -> string
const Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.User.AuthenticatedUserId = "TelemetryContext.User.AuthenticatedUserId" -> string
const Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.User.Id = "TelemetryContext.User.Id" -> string
const Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.User.UserAgent = "TelemetryContext.User.UserAgent" -> string
const Microsoft.ApplicationInsights.Metrics.Extensibility.MemoryMetricTelemetryPipeline.CountLimitDefault = 1000 -> int
const Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregateToApplicationInsightsPipelineConverterBase.AggregationIntervalMonikerPropertyKey = "_MS.AggregationIntervalMs" -> string
const Microsoft.ApplicationInsights.Metrics.MetricIdentifier.MaxDimensionsCount = 10 -> int
const Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.AggregateKindConstants.Constants.AggregateKindDataKeys.Count = "Count" -> string
const Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.AggregateKindConstants.Constants.AggregateKindDataKeys.Max = "Max" -> string
const Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.AggregateKindConstants.Constants.AggregateKindDataKeys.Min = "Min" -> string
const Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.AggregateKindConstants.Constants.AggregateKindDataKeys.StdDev = "StdDev" -> string
const Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.AggregateKindConstants.Constants.AggregateKindDataKeys.Sum = "Sum" -> string
const Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.AggregateKindConstants.Constants.AggregateKindMoniker = "Microsoft.Azure.Measurement" -> string
const Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.Constants.AggregateKindDataKeys.Count = "Count" -> string
const Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.Constants.AggregateKindDataKeys.Max = "Max" -> string
const Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.Constants.AggregateKindDataKeys.Min = "Min" -> string
const Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.Constants.AggregateKindDataKeys.StdDev = "StdDev" -> string
const Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.Constants.AggregateKindDataKeys.Sum = "Sum" -> string
const Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.Constants.AggregateKindMoniker = "Microsoft.Azure.Measurement" -> string
override Microsoft.ApplicationInsights.Metrics.MetricConfiguration.Equals(object obj) -> bool
override Microsoft.ApplicationInsights.Metrics.MetricConfiguration.GetHashCode() -> int
override Microsoft.ApplicationInsights.Metrics.MetricIdentifier.Equals(object otherObj) -> bool
override Microsoft.ApplicationInsights.Metrics.MetricIdentifier.GetHashCode() -> int
override Microsoft.ApplicationInsights.Metrics.MetricIdentifier.ToString() -> string
override Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.Equals(object obj) -> bool
override Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.GetHashCode() -> int
static Microsoft.ApplicationInsights.MetricConfigurationsExtensions.Measurement(this Microsoft.ApplicationInsights.MetricConfigurations metricConfigPresets) -> Microsoft.ApplicationInsights.Metrics.MetricConfigurationForMeasurement
static Microsoft.ApplicationInsights.MetricConfigurationsExtensions.SetDefaultForMeasurement(this Microsoft.ApplicationInsights.MetricConfigurations metricConfigPresets, Microsoft.ApplicationInsights.Metrics.MetricConfigurationForMeasurement defaultConfigurationForMeasurement) -> void
static Microsoft.ApplicationInsights.Metrics.Extensibility.MetricConfigurationExtensions.Constants(this Microsoft.ApplicationInsights.Metrics.MetricConfigurationForMeasurement measurementConfig) -> Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.AggregateKindConstants
static Microsoft.ApplicationInsights.Metrics.Extensibility.MetricConfigurationExtensions.Constants(this Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement measurementConfig) -> Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.AggregateKindConstants
static Microsoft.ApplicationInsights.Metrics.Extensibility.MetricExtensions.GetConfiguration(this Microsoft.ApplicationInsights.Metric metric) -> Microsoft.ApplicationInsights.Metrics.MetricConfiguration
static Microsoft.ApplicationInsights.Metrics.Extensibility.MetricManagerExtensions.StartOrCycleAggregators(this Microsoft.ApplicationInsights.Metrics.MetricManager metricManager, Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregationCycleKind aggregationCycleKind, System.DateTimeOffset tactTimestamp, Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricSeriesFilter futureFilter) -> Microsoft.ApplicationInsights.Metrics.Extensibility.AggregationPeriodSummary
static Microsoft.ApplicationInsights.Metrics.Extensibility.MetricManagerExtensions.StopAggregators(this Microsoft.ApplicationInsights.Metrics.MetricManager metricManager, Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregationCycleKind aggregationCycleKind, System.DateTimeOffset tactTimestamp) -> Microsoft.ApplicationInsights.Metrics.Extensibility.AggregationPeriodSummary
static Microsoft.ApplicationInsights.Metrics.Extensibility.MetricManagerExtensions.StopDefaultAggregationCycleAsync(this Microsoft.ApplicationInsights.Metrics.MetricManager metricManager) -> System.Threading.Tasks.Task
static Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesExtensions.GetConfiguration(this Microsoft.ApplicationInsights.Metrics.MetricSeries metricSeries) -> Microsoft.ApplicationInsights.Metrics.IMetricSeriesConfiguration
static Microsoft.ApplicationInsights.Metrics.Extensibility.TelemetryClientExtensions.GetMetricManager(this Microsoft.ApplicationInsights.TelemetryClient telemetryClient, Microsoft.ApplicationInsights.MetricAggregationScope aggregationScope) -> Microsoft.ApplicationInsights.Metrics.MetricManager
static Microsoft.ApplicationInsights.Metrics.MetricIdentifier.DefaultMetricNamespace.get -> string
static Microsoft.ApplicationInsights.Metrics.MetricIdentifier.DefaultMetricNamespace.set -> void
static Microsoft.ApplicationInsights.Metrics.MetricIdentifier.ValidateLiteral(string partValue, string partName) -> void
static Microsoft.ApplicationInsights.Metrics.TelemetryConfigurationExtensions.GetMetricManager(this Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration telemetryPipeline) -> Microsoft.ApplicationInsights.Metrics.MetricManager
static readonly Microsoft.ApplicationInsights.MetricConfigurations.Common -> Microsoft.ApplicationInsights.MetricConfigurations
static readonly Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregateToTelemetryPipelineConverters.Registry -> Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregateToTelemetryPipelineConverters
static volatile Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase<TBufferedValue>.countBufferFlushes -> int
static volatile Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase<TBufferedValue>.countBufferWaitSpinCycles -> int
static volatile Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase<TBufferedValue>.countBufferWaitSpinEvents -> int
static volatile Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase<TBufferedValue>.countNewBufferObjectsCreated -> int
static volatile Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase<TBufferedValue>.timeBufferWaitSpinMillis -> int
virtual Microsoft.ApplicationInsights.Metrics.MetricConfiguration.Equals(Microsoft.ApplicationInsights.Metrics.MetricConfiguration other) -> bool